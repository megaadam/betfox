// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PriceLadderDefinition price ladder definition
//
// swagger:model PriceLadderDefinition
type PriceLadderDefinition struct {

	// type
	// Enum: [CLASSIC FINEST LINE_RANGE]
	Type string `json:"type,omitempty"`
}

// Validate validates this price ladder definition
func (m *PriceLadderDefinition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var priceLadderDefinitionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CLASSIC","FINEST","LINE_RANGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		priceLadderDefinitionTypeTypePropEnum = append(priceLadderDefinitionTypeTypePropEnum, v)
	}
}

const (

	// PriceLadderDefinitionTypeCLASSIC captures enum value "CLASSIC"
	PriceLadderDefinitionTypeCLASSIC string = "CLASSIC"

	// PriceLadderDefinitionTypeFINEST captures enum value "FINEST"
	PriceLadderDefinitionTypeFINEST string = "FINEST"

	// PriceLadderDefinitionTypeLINERANGE captures enum value "LINE_RANGE"
	PriceLadderDefinitionTypeLINERANGE string = "LINE_RANGE"
)

// prop value enum
func (m *PriceLadderDefinition) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, priceLadderDefinitionTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PriceLadderDefinition) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this price ladder definition based on context it is used
func (m *PriceLadderDefinition) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PriceLadderDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PriceLadderDefinition) UnmarshalBinary(b []byte) error {
	var res PriceLadderDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
